pr: none
trigger:
  batch: false
  branches:
    include:
    - main

pool:
  name: Azure Pipelines
steps:
- task: UseDotNet@2
  inputs:
    version: '3.x' # Replace with the required .NET Core SDK version
    
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**/*.json' # Adjust the pattern to match your ARM templates and other files.
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

#publish the artifacts

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: MyArtifacttest'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'  # Adjust the path as per your output directory
    ArtifactName: 'MyArtifacttest'

  # variables:
  # azureClientId: 'b040af9a-d476-4145-9483-401e602d8058'
  # azureClientSecret: 'LdP8Q~pgr_4WLNPzvyunYkSB1x4UnBZqJWBJQczn'
  # azureTenantId: 'd5b66d53-29b2-4452-ba0f-f8badcf5782d'


# - task: CopyFiles@2
#   inputs:
#     SourceFolder: '$(Build.SourcesDirectory)'
#     Contents: '**/*.bat' # Adjust the pattern to match your ARM templates and other files.
#     TargetFolder: '$(Build.ArtifactStagingDirectory)'

# #publish the artifacts

# - task: PublishBuildArtifacts@1
#   displayName: 'Publish Artifact: MyArtifacttest1'
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'  # Adjust the path as per your output directory
#     ArtifactName: 'MyArtifacttest1'


- task: AzurePowerShell@5
  displayName: 'Azure PowerShell Script - Create Resource Group and Function App'
  inputs:
    azureSubscription: 'Amantya-LM (3718112c-afe8-4000-8156-64d160081570)'
    ScriptType: 'FilePath'
    ScriptPath: 'deploy.ps1'
    ScriptArguments: '-ResourceGroupName Test-Rg -FunctionAppName TestFunctionAPP -Location East US -ClientId $(azureClientId) -ClientSecret $(azureClientSecret) -TenantId $(azureTenantId)'
    azurePowerShellVersion: 'LatestVersion'
